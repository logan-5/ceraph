struct A {
    int x; int y; double z;
}

struct B {
    A a;
}

struct C {
    A a; B b;
    int i;
}

C g(C c) {
    B b = B.{};
    return c;
}

C make_c();

int foo() {
    C c = make_c();
    return c.i;
}

int bar() {
    return make_c().i;
}

int baz() {
    C c = make_c();
    return c.a.y;
}

int quux() {
    return make_c().a.y;
}

int the_one_after_quux() {
    C c = C.{};
    c.a.x = 15;
    c.a.y = 16;
    return c.a.x + c.a.y;
}

int blah(bool b) {
    A a = A.{};
    (if b { a.x } else { a.y }) = 12;
    A a2 = A.{};
    (if b { a } else { a2 }).x = 15;

    return -1;
}
