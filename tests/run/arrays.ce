int putchar(int);

void expect(bool);

void print_digit(int i) {
    print_digit(i);
}

float get_f() {
    return 5.f;
}

struct S {
    [int: 10] arr;
}
/*
int sum(int* arr, int size) {
    int s = 0;
    int i = 0;
    while i < size {
        s = s + arr[i];
        i = i + 1;
    };
    return s;
}*/

int main() {
    let a = [1, 2, 3, 4, 5];
    expect(a[0] == 1);
    a[0] = 42;
    expect(a[0] == 42);

    int i = 0;
    while i < 5 {
        a[i] = a[i] + a[i];
        i = i + 1;
    };
    i = 2;
    while i < 6 {
        expect(a[i-1] == i * 2);
        i = i + 1;
    };

    let b = [2.0, 2.0];

    let c = [[3.0, 3.0], b];
    expect(c[0][1] == 3.0);

    [float: 1] fa = [4.f];
    float f = 3.f;
    float f2 = f/2.f;
    let fs = [f-f, f2/f2, f2*f2, get_f(), f2, f2, fa[0], f*f];
/*
    S s = S.{};
    i = 0;
    while i < 10 {
        s[i] = i + 1;
        i = i + 1;
    };
    expect(sum(&s.arr[0], 10) == 55);
*/
    0
}